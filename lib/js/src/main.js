// Generated by BUCKLESCRIPT VERSION 1.7.4, PLEASE EDIT WITH CARE
'use strict';

var Fs            = require("fs");
var List          = require("bs-platform/lib/js/list.js");
var Path          = require("path");
var $$Array       = require("bs-platform/lib/js/array.js");
var Curry         = require("bs-platform/lib/js/curry.js");
var Extract       = require("./extract.js");
var Process       = require("process");
var ParseArgs     = require("minimist");
var Pervasives    = require("bs-platform/lib/js/pervasives.js");
var Child_process = require("child_process");

var out_dir = "__mdcc__";

var tmp_dir = Path.join(out_dir, "tmp");

function ensureDirExists(path) {
  var dir = Path.dirname(path);
  if (Fs.existsSync(dir)) {
    return 0;
  } else {
    ensureDirExists(dir);
    Fs.mkdirSync(dir);
    return /* () */0;
  }
}

function writeFile(filename, content) {
  ensureDirExists(filename);
  Fs.writeFileSync(filename, content);
  return /* () */0;
}

function checkWithBsc(file) {
  var ml_path = Path.join("..", file);
  var js_path = Path.basename(file) + ".js";
  var cmd = "../../node_modules/bs-platform/bin/bsc.exe -color always -c -o " + (String(js_path) + (" " + (String(ml_path) + "")));
  Child_process.execSync(cmd, {
        cwd: tmp_dir
      });
  console.log("done");
  return /* () */0;
}

function checkExtracted(filename, lang) {
  if (lang === "ml") {
    return checkWithBsc(filename);
  } else {
    console.log("Unrecognized language: " + lang);
    return /* () */0;
  }
}

function checkFile(path) {
  console.log("Parsing " + (path + "... "));
  List.iteri(function (i, param) {
        var lang = param[0];
        var i$1 = Pervasives.string_of_int(i);
        var target_file = "" + (String(path) + ("." + (String(i$1) + ("." + (String(lang) + "")))));
        var target_path = Path.join(out_dir, target_file);
        writeFile(target_path, param[1]);
        Pervasives.print_string("Checking " + (target_file + "... "));
        return checkExtracted(target_file, lang);
      }, $$Array.to_list(Curry._1(Extract.extract, Fs.readFileSync(path, "utf8"))));
  console.log("");
  return /* () */0;
}

var args = ParseArgs(Process.argv.slice(2));

var files = args._;

ensureDirExists(Path.join(tmp_dir, "dummy"));

List.map(checkFile, $$Array.to_list(files));

exports.out_dir         = out_dir;
exports.tmp_dir         = tmp_dir;
exports.ensureDirExists = ensureDirExists;
exports.writeFile       = writeFile;
exports.checkWithBsc    = checkWithBsc;
exports.checkExtracted  = checkExtracted;
exports.checkFile       = checkFile;
exports.args            = args;
exports.files           = files;
/* tmp_dir Not a pure module */
